- user = req.to_user
.row.hero_detail{:id => "user_detail_#{req.id}"}
  .col-lg-12.col-md-12.col-sm-12
    - if current_user.present? && current_user.can_modify?(req)
      = "What's your #Purpose?"
      .emotions
        .row
          - Request::EMOTIONS.each_slice(3) do |emotions|
            - emotions.each do |emotion|
              %span.emotion.highlight.col-md-3.text-center{:class => req.emotion.present? && req.emotion == emotion ? 'current_emotion' : ''}
                = link_to user_request_path(current_user, req, {'request[emotion]' => emotion}), method: :put, remote: true do
                  = emotion
          - if req.emotion.present? && !Request::EMOTIONS.include?(req.emotion)
            %span.emotion.highlight.col-md-3.text-center.current_emotion
              = link_to user_request_path(current_user, req, {'request[emotion]' => req.emotion}), method: :put, remote: true do
                = req.emotion
          %span.col-md-3.emotion.text-center
            =link_to "#Create", "#new_tag_#{req.id}", "data-toggle" => "collapse", :id => "create-new-tag-#{req.id}"
        .text-center
          .collapse.col-md-12{'id' => "new_tag_#{req.id}"}
            = best_in_place req, :emotion, :url => user_request_path(current_user, req), as: :input, :place_holder => "Create new #purpose", :class => "emotion text-center current_emotion highlight", :inner_class => "bip", :activator => "#create-new-tag-#{req.id}", :html_attrs => { :maxlength => '50' }
        .clearfix
    - else
      - if req.emotion.present?
        .emotions
          .row
            %span.highlight.current_emotion.col-md-12.text-center
              = req.emotion
    - if current_user.present? && (current_user == req.from_user)
      .divider
      - if current_user.can_modify?(req)
        = best_in_place req, :story, :url => user_request_path(current_user, req), as: :textarea, :place_holder => 'Write your message.. (100 words)', :class => 'bip story', :html_attrs => { :maxlength => '200' }
      - if current_user.edit_published?(req)
        %span.pull-right
          =link_to "#edit_story_#{req.id}", :id => "edit-published-story-#{req.id}" do
            %i.fa.fa-pencil

        %span.pull-left.col-md-11.nopadding{:id => "edit_story_#{req.id}"}
          = best_in_place req, :story, :url => user_request_path(current_user, req), as: :textarea, :place_holder => 'Write your message.. (100 words)', :class => "bip story", :activator => "#edit-published-story-#{req.id}", :html_attrs => { :maxlength => '200' }
        .clearfix

    - elsif req.story.present?
      .divider
      = req.story
    - if current_user.present? && current_user.can_modify?(req)
      .divider
      Keep my message
      = best_in_place req, :public, :url => user_request_path(current_user, req), as: :checkbox, collection: {false: 'private', true: 'public'}, :class => 'bip highlight met_before'
    - if req.reply.present?
      .divider
      .row.vertical-align
        .col-sm-4
          .reply
            = link_to user_home_path(user) do
              = image_tag(user.image, :class => 'img-circle')
        .col-sm-6.nopadding.text-center
          %i.fa.fa-quote-left
          = req.reply
          %i.fa.fa-quote-right
    .divider
    - if current_user.present? && req.from_user == current_user
      .req_freeze.text-center
        = render partial: 'requests/publish', locals: {req: req}
    - else
      .row.stats
        .col-lg-4.col-md-4.col-sm-4.views
          %span.square-badge
            = req.views.count
          View
        .col-lg-4.col-md-4.col-sm-4.likes
          = render partial: 'requests/like', locals: {req: req}
        .cl-lg-4.col-md-4.col-sm-4.helps
          = render partial: 'requests/help', locals: {req: req}
